version: "3"
services:
  postgres:
    container_name: postgres
    image: postgres:14.2
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./backend/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_project
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.8
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8003:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    links:
      - postgres
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: .Dockerfile
    depends_on:
      - postgres
    environment:
      PORT: 8001
      DB_HOST: postgres
      DB_NAME: todo_project
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      NODE_ENV: development
    ports:
      - "8001:8001"
    links:
      - postgres
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: .Dockerfile
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:8001
      NODE_ENV: development
    ports:
      - "8000:3000"
    links:
      - backend
  
  
volumes:
    pgadmin-data: